#!/bin/bash

##
##  Copyright 2016 SRI International
##  See COPYING file distributed along with the package for the copyright and license terms.
##
##  $HeadURL: https://www.nitrc.org/svn/ncanda-datacore/trunk/utils/update_csv_summaries $
##  $Revision: 2692 $
##  $LastChangedDate: 2017-05-04 00:45:18 -0700 (Thu, 04 May 2017) $
##  $LastChangedBy: dj0330 $
##

# Get absolute path 
# bindir=$(cd "$(dirname $0)"; pwd)

if [ $# -lt 2 ]; then
  echo "Please provide source (e.g. /fs/ncanda-share/cases) and destination directories (e.g. /fs/ncanda-share/summaries)."
  echo "Destingation directory must be an absolute path." 
  echo "Optional: if followed by "
  echo "0 or 1 = redcap summaries are created (1) or not (0) - default they are created" 
  echo "0 or 1 = structural summaries are created (1) or not (0) - default they are created" 
  echo "0 or 1 = diffusion summaries are created (1) or not (0) - default they are created" 
  echo "0 or 1 = restingstate summaries are created (1) or not (0) - default they are created"
  echo "form   = only update one specific redcap form (e.g. demographics)"
  exit 1
fi

srcdir=$1
if [ ! -e $srcdir ]; then
    echo "ERROR:$srcdir does not exist!"
    exit 1
fi

dstdir=$2

if [[ "$dstdir" != /* ]]; then
    echo "ERROR:Destination $dstdir needs to be an absolute path!"
    exit 1
fi

redcapFlag=$3
if [ "$redcapFlag" == "" ]; then
    redcapFlag=1
fi 
redcapForm=$7

structuralFlag=$4
if [ "$structuralFlag" == "" ]; then
    structuralFlag=1
fi 

SRI24_FLAG=true
#SELECTED_LIST="aseg_outliers"


diffusionFlag=$5
if [ "$diffusionFlag" == "" ]; then
    diffusionFlag=1
fi 

restingstateFlag=$6
if [ "$diffusionFlag" == "" ]; then
    restingstateFlag=1
fi 

scriptDir=$PWD
pushd ${srcdir} > /dev/null

[ -d ${dstdir} ] || mkdir -p ${dstdir}

PATTERN=NCANDA_S0

concat_csv() {
   OUTPUT_FILE=$1
   shift
   FIRST_CSV=$1
   shift
   REST_CSV=$@
   if [ "$FIRST_CSV" == "" ]; then
       echo "ERROR: Incomplete input to define $OUTPUT_FILE !"
       return
   fi

   if [ -e ${OUTPUT_FILE} ]; then
       rm -f ${OUTPUT_FILE}
   fi

   if [ ! -e ${FIRST_CSV} ]; then
       echo "ERROR: ${FIRST_CSV} does not exist - skip ${OUTPUT_FILE}"
       return
   fi
   cat ${FIRST_CSV} > ${OUTPUT_FILE}
   HEAD_FIRST=`head -n1 ${FIRST_CSV}`

   errFlag=0
   for CSV in ${REST_CSV}; do
       HEAD_SUBJECT=`head -n1 ${CSV}`
       if [ "$HEAD_FIRST" != "$HEAD_SUBJECT" ]; then
	   errFlag=1
	   echo "ERROR:update_csv_summaries:$CSV:Incorrect header!"
	   continue 
       fi
       tail -n+2 $CSV >> ${OUTPUT_FILE}
   done
   if [ $errFlag -eq 1 ]; then
       echo "INFO:Due to earlier errors removing ${OUTPUT_FILE}!"
       rm ${OUTPUT_FILE}
   fi      
}


#
# redcap measures
#
if [ "$redcapFlag" == "1" ]; then
    # echo "Run REDCap Reports"
    if [ "$redcapForm" != "" ]; then
	redDIR=${dstdir}/redcap
	measures="$redcapForm"
    else
        redDIR=${dstdir}/redcap_
        [ -d ${redDIR} ] && rm -rf ${redDIR}
	# These are all the baseline measures
  measures="ataxia biological_mr biological_np brief cddr clinical cnp dd100 dd1000 demographics ehi grooved_pegboard highrisk ishihara landoltc limesurvey_ssaga_parent limesurvey_ssaga_youth locked_forms mri_report mri_stroop mr_session_report np_reyosterrieth_complex_figure_files parentreport participant_last_use_summary pasat rey-o saliva_samples sleep_behavior ssaga_parent ssaga_youth stroop wais4 wrat4 youthreport1 youthreport1b youthreport2 parentreport_aans parentreport_cbcl parentreport_pdi parentreport_pei parentreport_pfhi parentreport_ptbi parentreport_sesp youthreport1_bdchecklist youthreport1_cddr youthreport1_ciq youthreport1_demographics youthreport1_fhi youthreport1_npchecklist youthreport1_ses youthreport1_sre youthreport1_tbi youthreport1b_asr youthreport1b_bdchecklist youthreport1b_yei youthreport1b_ysr youthreport2_aay youthreport2_acc youthreport2_aces youthreport2_aeas youthreport2_aeq youthreport2_aswhs youthreport2_brief youthreport2_casq youthreport2_chks youthreport2_ctq youthreport2_dhr youthreport2_dtcq youthreport2_hss youthreport2_leaq youthreport2_maaq youthreport2_pds youthreport2_pgd youthreport2_pm youthreport2_pmi youthreport2_prr youthreport2_psqi youthreport2_pss youthreport2_ptm youthreport2_pwmkcr youthreport2_rpir youthreport2_rsq youthreport2_sbq youthreport2_scsm youthreport2_shq youthreport2_sog youthreport2_ssq youthreport2_tipi youthreport2_ula youthreport2_upps youthreport2_yei youthreport2_ypa midyear_youth_interview"
    fi 
    mkdir -p ${redDIR}
    for m in ${measures}; do
      files="$(ls */*/*/measures/${m}.csv 2>/dev/null)"
      if [ "$files" != ""  ]; then 
        concat_csv ${redDIR}/${m}.csv ${files}
      else 
	echo "Skipping ${m}"
      fi  
    done
    if [ "$redcapForm" == "" ]; then
       [ -d ${dstdir}/redcap ] && rm -rf ${dstdir}/redcap 
       mv ${redDIR} ${dstdir}/redcap
    fi 
fi

if [ "$structuralFlag" == "1" ]; then
  # echo "Run Structural Reports" 

  # make last visit list 'last_list
  LONGITUDINAL_FLAG=true
  last_list=
    
  if ${LONGITUDINAL_FLAG}; then   
    for subject in `ls -d --color=no $PATTERN*`; do
      # only include those that have a baseline scan 
      if [ -d $subject/standard/baseline/structural/volumetry ]; then 
	  sList=`ls -d1 --color=no $subject/standard/*/structural/volumetry | grep -e baseline -e followup_1y -e followup_2y -e followup_3y -e followup_4y -e followup_5y -e followup_6y -e followup_7y -e followup_8y`
	  last=`echo ${sList} | rev | cut -d' ' -f1  | rev | cut -d'/' -f1-3`
	  last_list="${last_list} $last"
      fi 
    done
  else
      echo "Skipping Structural Longitudinal!"
  fi 

  if ${SRI24_FLAG}; then 
    # These are all the MR measurements extracted by our pipeline 
    cross_dir=${dstdir}/structural/cross-sectional/sri24 
    [ -d ${cross_dir}_ ] && rm -rf ${cross_dir}_
    mkdir -p ${cross_dir}_

    long_dir=${dstdir}/structural/longitudinal/sri24
    [ -d ${long_dir}_ ] && rm -rf ${long_dir}_
    mkdir -p ${long_dir}_
  
    #
    # structural sri24 measures
    #
    parc="icv parc116 suptent ventricles wm400 postfossa_dmid inftent"
    for TYPE in atropos atropos_masked; do
      VolMeasType=volumetry/sri24_padded/$TYPE
      for p in ${parc}; do
        # cross-sectional
        concat_csv ${cross_dir}_/${TYPE}_${p}.csv */*/*/structural/${VolMeasType}/${p}.csv
        concat_csv ${cross_dir}_/${TYPE}_${p}_scale.csv */*/*/structural/${VolMeasType}/${p}_scale.csv
        # longitudinal
  
        csv_list=
        csv_scale_list=
        for l in ${last_list}; do
          visit=`echo ${l} | cut -d "/" -f3`
          if [ "${visit}" == "baseline" ]; then
            csv_list="${csv_list} `ls --color=no ${l}/structural/${VolMeasType}/${p}.csv 2> /dev/null`"
            csv_scale_list="${csv_scale_list} `ls --color=no ${l}/structural/${VolMeasType}/${p}_scale.csv 2> /dev/null`"
          else
            csv_list="${csv_list} `ls --color=no ${l}/structural/longitudinal/${VolMeasType}/*/${p}.csv 2> /dev/null`"
            csv_scale_list="${csv_scale_list} `ls --color=no ${l}/structural/longitudinal/${VolMeasType}/*/${p}_scale.csv 2> /dev/null`"
          fi
        done
        concat_csv ${long_dir}_/${TYPE}_${p}.csv ${csv_list}
        concat_csv ${long_dir}_/${TYPE}_${p}_scale.csv ${csv_scale_list}
      done
    done
    [ -d ${cross_dir} ] && rm -rf ${cross_dir}
    mv ${cross_dir}_ ${cross_dir}

    [ -d ${long_dir} ] && rm -rf ${long_dir}
    mv ${long_dir}_ ${long_dir}

  else
      echo "Skipping SRI24" 
  fi 



  #
  # structural freesurfer measures
  #

  cross_dir=${dstdir}/structural/cross-sectional/freesurfer 
  long_dir=${dstdir}/structural/longitudinal/freesurfer
  if [ "${SELECTED_LIST}" != "" ]; then
      if [ -e ${cross_dir} ]; then  
	  mv ${cross_dir} ${cross_dir}_
      else
	  mkdir -p ${cross_dir}_
      fi
      if [ -e ${cross_dir} ]; then        
          mv ${long_dir} ${long_dir}_
      else 
	  mkdir -p ${long_dir}_
      fi
      
      REPORT_LIST=${SELECTED_LIST}
      echo "Only running report on: $REPORT_LIST" 
  else 
      [ -d ${cross_dir}_ ] && rm -rf ${cross_dir}_
      mkdir -p ${cross_dir}_

      [ -d ${long_dir}_ ] && rm -rf ${long_dir}_
      mkdir -p ${long_dir}_
      REPORT_LIST="aseg lh.aparc.DKTatlas40 lh.w-g.pct rh.BA wmparc lh.BA rh.aparc.a2009s rh.BA.thresh lh.aparc.a2009s lh.BA.thresh rh.aparc  rh.entorhinal_exvivo lh.aparc lh.entorhinal_exvivo rh.aparc.DKTatlas40  rh.w-g.pct wmsnr.e3 aseg_outliers" 
  fi 

  tmpDir=`mktemp -d` 
  for type in ${REPORT_LIST}; do
    # cross-sectional
    concat_csv ${cross_dir}_/${type}.csv ${PATTERN}*/*/*/structural/freesurfer_refined/${PATTERN}*/measures/${type}.csv

    if $LONGITUDINAL_FLAG; then 
      # longitudinal
      csv_list=
      for l in ${last_list}; do
        visit=`echo ${l} | rev | cut -d "/" -f1 | rev`
        if [ "${visit}" == "baseline" ]; then
          FILE=`ls --color=no ${l}/structural/freesurfer_refined/${PATTERN}*/measures/${type}.csv 2> /dev/null`
	  if [ $type == "aseg" ]; then
	      # in longitudinal files the following columns are missing
	      # head -n1 NCANDA_S00090/standard/baseline/structural/freesurfer_refined/NCANDA_S00090_standard_baseline/measures/aseg.csv | tr "," "\n" | grep -n surfaceholes
	      # 21:measure_lhsurfaceholes
	      # 22:measure_rhsurfaceholes
	      # 23:measure_surfaceholes

	      if [ -e $FILE ]; then
		  outFile=${tmpDir}/`echo ${l} | tr "/" "_"`_${type}.csv
		  cut -d, -f1-20,24- $FILE > $outFile
		  csv_list="${csv_list}$outFile "
	      fi
	  else
	      csv_list="${csv_list}$FILE "
	  fi     
        else
	  baseFile=`ls --color=no ${l}/structural/longitudinal/freesurfer_refined/baseline.long.template*/measures/${type}.csv 2> /dev/null | head -n1` 
	  if [ "$baseFile" != "" ]; then 
            csv_list="${csv_list}${baseFile} `ls --color=no ${l}/structural/longitudinal/freesurfer_refined/*y.long.template*/measures/${type}.csv 2> /dev/null` "
          fi
        fi 
      done
      concat_csv ${long_dir}_/${type}.csv ${csv_list}
    else
       echo "skipping longitudinal"
    fi
  done

  rm -rf $tmpDir
  
  [ -d ${cross_dir} ] && rm -rf ${cross_dir}
  mv ${cross_dir}_ ${cross_dir}

  [ -d ${long_dir} ] && rm -rf ${long_dir}
  mv ${long_dir}_ ${long_dir}
fi

#
# diffusion measures
#
diffusionReport()
{
  local filePrefix=$1
  shift
  local filePostfix=$1
  shift 
  local dir_list="$*" 
  for MOD in fa l1 lt md; do 
    FILE="${filePrefix}_${MOD}${filePostfix}"
    file_list= 
    for DIR in $dir_list; do
	if [ -e $DIR/${FILE} ]; then 
	    file_list="${file_list}$DIR/${FILE} "
	fi
    done
    # just cross-sectional - not as stable 
    # concat_csv ${dstdir}/diffusion_/${FILE} */*/*/diffusion/pepolar/measures/${FILE}
    # longitudinal results - lower intra-rater variability - should be used 
    concat_csv ${dstdir}/diffusion_/${FILE} $file_list 
  done
}

if [ "$diffusionFlag" == "1" ]; then 
  # echo "Run Diffusion Reports" 
  [ -d ${dstdir}/diffusion_ ] && rm -rf ${dstdir}/diffusion_ 
  mkdir -p ${dstdir}/diffusion_

  csv_list=
  for subject in `ls -d --color=no $PATTERN*/standard`; do 
      for VISIT in $subject/baseline `ls -d --color=no $subject/followup_*y 2> /dev/null`; do 
	  if [ -d $VISIT/diffusion/pepolar/longitudinal/measures ]; then 
	      csv_list="${csv_list}$VISIT/diffusion/pepolar/longitudinal/measures "
	  elif [ -d $VISIT/diffusion/pepolar/measures ]; then 
	      csv_list="${csv_list}$VISIT/diffusion/pepolar/measures "
	  fi 
      done
  done

  diffusionReport mori_ncanda_baseline_meet_criteria _skeleton.csv $csv_list
  diffusionReport mori_ncanda_baseline_meet_criteria _corrected_global_skeleton.csv $csv_list
  # those are not used 
  # diffusionReport mori_ncanda_baseline_meet_criteria _corrected_global_add_skeleton.csv $csv_list
  # diffusionReport mori_ncanda_baseline_meet_criteria _corrected_local_mul_skeleton.csv
  # diffusionReport mori_ncanda_baseline_meet_criteria _corrected_local_add_skeleton.csv

  [ -d ${dstdir}/diffusion ] && rm -rf ${dstdir}/diffusion 
  mv ${dstdir}/diffusion_ ${dstdir}/diffusion
fi 

if [ "$restingstateFlag" == "1" ]; then
  # echo "Run Restingstate Reports" 
  [ -d ${dstdir}/restingstate_ ] && rm -rf ${dstdir}/restingstate_ 
  mkdir -p ${dstdir}/restingstate_ 

  concat_csv ${dstdir}/restingstate_/rs_qa.csv ${PATTERN}*/*/*/restingstate/measures/rs_qa.csv 
  concat_csv ${dstdir}/restingstate_/sri24_parc116_gm_roi2roi_correlations.csv  ${PATTERN}*/*/*/restingstate/measures/sri24_epi/sri24_parc116_gm_roi2roi_correlations.csv
  concat_csv ${dstdir}/restingstate_/sri24_parc116_gm_roi2roi_partial_correlations.csv  ${PATTERN}*/*/*/restingstate/measures/sri24_epi/sri24_parc116_gm_roi2roi_partial_correlations.csv
  concat_csv ${dstdir}/restingstate_/sri24_parc215_gm_roi2roi_correlations.csv  ${PATTERN}*/*/*/restingstate/measures/sri24_epi/sri24_parc215_gm_roi2roi_correlations.csv
  concat_csv ${dstdir}/restingstate_/sri24_parc215_gm_roi2roi_partial_correlations.csv  ${PATTERN}*/*/*/restingstate/measures/sri24_epi/sri24_parc215_gm_roi2roi_partial_correlations.csv

  [ -d ${dstdir}/restingstate ] && rm -rf ${dstdir}/restingstate 
  mv ${dstdir}/restingstate_ ${dstdir}/restingstate
fi 
popd > /dev/null
# cd ${srcdir}
# ${bindir}/../xnat/xnat_lookup.py -k -r -o ${dstdir}/subject_ids.csv NCANDA_S0*

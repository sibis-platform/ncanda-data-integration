#!/bin/bash -l

# if on instance is running then it is at least has a count of 2 !
num_scripts=`ps -ef | grep [c]rond/front-hourly-script | grep /bin/bash | wc -l `
if [ `echo $?` != 0 ]; then
    echo "WARNING:front-hourly:Something is wrong with check for existing front-hourly-script run!"
    exit 1
fi

# Check that script ran 
RUN_LOG=/tmp/front-hourly-run.log
Hour=$(date +%H)
if [ $num_scripts -gt 0 ]; then 
    if [ `grep $Hour ${RUN_LOG} 2> /dev/null | wc -l` -gt 0 ]; then
        echo "INFO:front-hourly:Skipping ${Hour}h run even though it did not run in the last 24h as other process still active!"
    fi
    exit 0
fi

# do not pad hour with 0 even though it should not make a difference
hour=$(date +%-H)

# Do not run during the night - nothing needs updating
if [ ${hour} -lt 4 ] || [ ${hour} -gt 19 ]; then
    exit 0
fi

# intially want to make sure it always runs at 4 am unless 4 am is skipped
if [ ${hour} -eq 4 ] || [ ${hour} -lt 9 -a `grep $Hour ${RUN_LOG} 2> /dev/null | wc -l` -gt 0 ]; then
    echo "INFO:front-hourly:Script ran `wc -l $RUN_LOG 2> /dev/null | cut -d' ' -f1` time in the last 24h!"
    mv  $RUN_LOG ${RUN_LOG}_
    # Beginning of day 
    qa_args="-p -i"
elif [ ${hour} -gt 16 -a  `grep "\-e"  ${RUN_LOG} 2> /dev/null | wc -l` -eq 0  ]; then
    # end of day 
    qa_args="-p -e"
else
    qa_args="-p"
fi

echo "$Hour $qa_args" >> $RUN_LOG
timeout 8h /sibis-software/ncanda-data-integration/scripts/crond/front-hourly-script $qa_args && exit 0
echo "ERROR:front-hourly: script at hour ${hour}h did not complete within 8 hours or another error occured!"
exit 1
